--  Sample employee database 
--  See changelog table for details
--  Copyright (C) 2007,2008, MySQL AB
--  
--  Original data created by Fusheng Wang and Carlo Zaniolo
--  http://www.cs.aau.dk/TimeCenter/software.htm
--  http://www.cs.aau.dk/TimeCenter/Data/employeeTemporalDataSet.zip
-- 
--  Current schema by Giuseppe Maxia 
--  Data conversion from XML to relational by Patrick Crews
-- 
-- This work is licensed under the 
-- Creative Commons Attribution-Share Alike 3.0 Unported License. 
-- To view a copy of this license, visit 
-- http://creativecommons.org/licenses/by-sa/3.0/ or send a letter to 
-- Creative Commons, 171 Second Street, Suite 300, San Francisco, 
-- California, 94105, USA.

--  DISCLAIMER
--  To the best of our knowledge, this data is fabricated, and
--  it does not correspond to real people. 
--  Any similarity to existing people is purely coincidental.

-- Source: https://www.dropbox.com/s/lhj4axkaupjhmbq/employees_mod.sql?dl=0
USE employees_mod;

# 1 - provide a breakdown between the male and female employees working in the company each year, starting from 1990
SELECT 
    YEAR(de.from_date) AS calendar_year,
    e.gender AS gender,
    COUNT(de.emp_no) AS no_of_employees
FROM
    t_dept_emp de
        JOIN
    t_employees e ON e.emp_no = de.emp_no
GROUP BY calendar_year , gender
HAVING calendar_year >= '1990'
ORDER BY calendar_year;

#2 - compare the number of male managers to the number of female managers from different departments for each year starting from 1990
SELECT 
    d.dept_name,
    ee.gender,
    dm.emp_no,
    dm.from_date,
    dm.to_date,
    e.calendar_year,
    CASE
        WHEN
            YEAR(dm.to_date) >= e.calendar_year
                AND YEAR(dm.from_date) <= e.calendar_year
        THEN
            '1'
        ELSE '0'
    END AS active
FROM
    (SELECT 
        YEAR(hire_date) AS calendar_year
    FROM
        t_employees
    GROUP BY calendar_year) e
        CROSS JOIN
    t_dept_manager dm
        JOIN
    t_departments d ON dm.dept_no = d.dept_no
        JOIN
    t_employees ee ON ee.emp_no = dm.emp_no
ORDER BY dm.emp_no , e.calendar_year;

#3 - Compare the average salary of female vs male employees in the entire company until year 2002
SELECT 
    e.gender,
    d.dept_name,
    ROUND(AVG(s.salary), 2) AS avg_salary,
    YEAR(s.from_date) AS calendar_year
FROM
    t_employees e
        JOIN
    t_dept_emp de ON e.emp_no = de.emp_no
        JOIN
    t_salaries s ON de.emp_no = s.emp_no
        JOIN
    t_departments d ON d.dept_no = de.dept_no
GROUP BY d.dept_name , e.gender , calendar_year
HAVING calendar_year <= 2002
ORDER BY d.dept_name;

#4 - create an SQL stored procedure that obtains the average male and female salary per department within a certain salary range.
#Let this range be defined by two values the user can insert when calling the procedure

DELIMITER $$
CREATE PROCEDURE avg_salary_gender_department(IN p_min_salary FLOAT, IN p_max_salary FLOAT)
BEGIN
	SELECT 
		e.gender,
		d.dept_name,
		ROUND(AVG(s.salary), 2) AS avg_salary
	FROM 
		t_employees e
	JOIN
		t_salaries s ON s.emp_no = e.emp_no
	JOIN 
		t_dept_emp de ON de.emp_no = s.emp_no
	JOIN 
		t_departments d ON d.dept_no = de.dept_no
	WHERE s.salary BETWEEN p_min_salary AND p_max_salary
	GROUP BY d.dept_name, e.gender;
END$$
	DELIMITER ;

CALL avg_salary_gender_department(50000, 90000);

#5 - use the 'employees' database to show the gender distribution for each job title
USE employees;

SELECT 
	t.title,
    e.gender,
    COUNT(DISTINCT t.emp_no) AS no_of_employees,
    SUM(COUNT(DISTINCT t.emp_no)) OVER (PARTITION BY t.title) AS total_employees_per_title,
	ROUND((COUNT(DISTINCT t.emp_no))/(SUM(COUNT(DISTINCT t.emp_no)) OVER (PARTITION BY t.title))*100,2) as percentage
FROM
	employees e
JOIN 
	titles t ON e.emp_no = t.emp_no
GROUP BY t.title, e.gender;
